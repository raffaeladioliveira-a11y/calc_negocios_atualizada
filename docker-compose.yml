version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password_123
      MYSQL_DATABASE: meu_projeto_db
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password_123
    ports:
      - "3336:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "app_user", "-papp_password_123"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend Node.js API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_api
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: meu_projeto_db
      DB_USER: app_user
      DB_PASSWORD: app_password_123
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped
    # command: npm run dev
    command: sh ./init-scripts/001_wait_and_migrate.sh npm run dev

  # Opcional: phpMyAdmin para gerenciar o banco
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root_password_123
    ports:
      - "8089:80"
    depends_on:
      - mysql
    networks:
      - app_network

volumes:
  mysql_data:

networks:
  app_network:
    driver: bridge